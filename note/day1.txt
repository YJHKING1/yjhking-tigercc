day1
	1.搭建一个springcloud项目步骤
		1.创建父子项目，搭建微服务基本架构
		2.父项目导入Jar包
			1.spring-parent
			2.springcloud
			3.springcloud-alibaba--如果需要再导
			4.整个项目需要的一些公共依赖
				1.lombok
				2.fastjson
				3.spring-boot-test
		3.如果是用的eureka作为注册中心，那么先搭建eureka，如果是nacos那么先在本地安装启动nacos
		4.搭建网关服务
			1.注册进注册中心中
			2.再搭建Gateway微服务
			3.集成nacos配置中心
				1.导入nacos-config依赖
				2.在配置中心中添加微服务的配置文件
				3.创建bootstrap.yml
					1.配置文件名称
					2.nacos地址
					3.前缀
					4.后缀
					5.环境
					6.命名空间
					7.分组
		5.搭建其它微服务，也要注册进注册中心
	2.代码生成之后的优化工作
		1.在生成的pojo服务中导入mybatis-plus包
		2.在yjhking-basic-common服务中导入课件中的工具类
			1.query
			2.result
			3.utils
		3.让pojo依赖yjhking-basic-common
		4.让生成代码的微服务依赖自己的pojo
	3.微服务集成mybatis-plus
		1.导入依赖
			1.mybatis-plus
			2.mysql
			3.ali连接池
		2.在yml中
			1.配置四大金刚/数据源
			2.配置连接池
			3.配置别名
			4.配置mapper.xml扫描
		3.创建一个配置类，直接拷贝课件，这个类就是mybatis-plus分页所需要的bean对象，我们的mapper接口包路径扫描也放在此配置类中
		4.更改云端配置，启动微服务，通过网关访问接口，能拿到数据，说明集成成功
	4.Swagger：访问地址 localhost:服务port/swagger-ui.html
		1.微服务集成swagger
			1.导入swagger依赖
			2.复制swagger配置
			3.类、方法、参数都可以加上对应的swagger注解进行说明
		2.gateway集成swagger
			1.导入swagger依赖
			2.复制swagger配置
	6.Git强行拉取命令：git pull origin master --allow-unrelated-histories
微服务之间的依赖关系
	1.tigercc-pojo-system依赖了yjhking-basic-commom
		1.依赖原因：需要用来commom里面的工具类
	2.tigercc-service-system依赖了tigercc-pojo-system
		1.依赖原因
			1.需要tigercc-pojo-system的domain
			2.需要yjhking-basic-commom工具类